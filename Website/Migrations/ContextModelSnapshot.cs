// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Website.Data;

#nullable disable

namespace Website.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("Website.Data.Discord.Category", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("AdminRoles")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("ReadRoles")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("WriteRoles")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("discord-categories");
                });

            modelBuilder.Entity("Website.Data.Discord.Channel", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("AdminRoles")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("ReadRoles")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("WriteRoles")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Name", "CategoryName");

                    b.HasIndex("CategoryName");

                    b.ToTable("discord-channels");
                });

            modelBuilder.Entity("Website.Data.Discord.Role", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Colour")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("discord-roles");
                });

            modelBuilder.Entity("Website.Data.Discord.Channel", b =>
                {
                    b.HasOne("Website.Data.Discord.Category", "Category")
                        .WithMany("Channels")
                        .HasForeignKey("CategoryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Website.Data.Discord.Category", b =>
                {
                    b.Navigation("Channels");
                });
#pragma warning restore 612, 618
        }
    }
}
